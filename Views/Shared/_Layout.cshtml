@inject NotesApart.Services.Interfaces.IUserService _userService
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - NotesApart</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/styles.css" asp-append-version="true" />

    @RenderSection("Styles", required: false)
</head>


<body class="d-flex flex-column min-vh-100">
    <div class="main-content">
        @{
            string profileImg = "~/images/default-avatar.png";
            string userName = User.Identity?.Name;

            if (User.Identity?.IsAuthenticated ?? false)
            {
                var userId = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
                var userTask = _userService.GetUserByIdAsync(userId);
                userTask.Wait(); // not ideal, but acceptable in a Razor view
                var user = userTask.Result;

                if (user != null)
                {
                    profileImg = !string.IsNullOrEmpty(user.ProfileImg) ? user.ProfileImg : profileImg;
                    userName = user.UserName;
                }
            }
        }

        <nav class="navbar navbar-expand-md navbar-dark">
            <div class="container">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">NOTES.APART</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navmenu">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <div class="collapse navbar-collapse" id="navmenu">
                    <ul class="navbar-nav ms-auto">
                        <li class="nav-item">
                            <a asp-controller="Artist" asp-action="Index" class="nav-link">ARTISTS</a>
                        </li>
                        <li class="nav-item">
                            <a asp-controller="Home" asp-action="About" class="nav-link">ABOUT</a>
                        </li>

                        @if (User.Identity?.IsAuthenticated ?? false)
                        {
                            @if (User.Identity.IsAuthenticated)
                            {
                                var isAdmin = User.IsInRole("Admin");
                                if (isAdmin)
                                {
                                    <li class="nav-item">
                                        <a asp-controller="Reviews" asp-action="Index" class="nav-link">REVIEWS</a>
                                    </li>
                                }
                            }
                            <li class="nav-item">
                                <a asp-controller="User" asp-action="Profile" class="nav-link">
                                    <img src="@profileImg" alt="Profile" width="24" height="24" class="rounded-circle me-1" />
                                    @userName
                                </a>
                            </li>
                            <li class="nav-item">
                                <form method="post" asp-area="Identity" asp-page="/Account/Logout" class="d-inline">
                                    <button type="submit" class="nav-link btn btn-link border-0 bg-transparent">LOGOUT</button>
                                </form>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item">
                                <a asp-area="Identity" asp-page="/Account/Register" class="nav-link">REGISTER</a>
                            </li>
                            <li class="nav-item">
                                <a asp-area="Identity" asp-page="/Account/Login" class="nav-link">LOG IN</a>
                            </li>
                        }

                        <li class="nav-item">
                            <form class="d-flex" asp-controller="Search" asp-action="Index" method="get">
                                <input name="query" class="form-control me-2" type="search" placeholder="Search" aria-label="Search" />
                                <button class="btn btn-outline-light" type="submit">
                                    <img src="~/images/search.svg" alt="Search" width="30" height="30" />
                                </button>
                            </form>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>

        <main class="container-fluid mt-4">
            @RenderBody()
        </main>
    </div>

    <footer class="p-5 bg-dark text-white text-center position-relative">
        <div class="container">
            <a asp-controller="Home" asp-action="About" >About</a>
        </div>
    </footer>

    <script src="https://code.jquery.com/jquery-3.7.1.min.js" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <script>
        $(document).ready(function() {
            $('.multiple-card-slider .carousel').each(function() {
                var currentCarouselId = '#' + $(this).attr('id');
                const multipleItemCarousel = document.querySelector(currentCarouselId);

                const carousel = new bootstrap.Carousel(multipleItemCarousel, {
                    interval: false,
                    wrap: false
                });

                var carouselWidth = $(currentCarouselId + ' .carousel-inner')[0].scrollWidth;
                var cardWidth = $(currentCarouselId + ' .carousel-item').outerWidth(true);
                var scrollPosition = 0;

                $(currentCarouselId + ' .carousel-control-next').on('click', function() {
                    var visibleCards = Math.floor($(currentCarouselId).width() / cardWidth);
                    if (scrollPosition < (carouselWidth - (visibleCards))) {
                        scrollPosition = scrollPosition + cardWidth;
                        $(currentCarouselId + ' .carousel-inner').animate({ scrollLeft: scrollPosition }, 600);
                    }
                });

                $(currentCarouselId + ' .carousel-control-prev').on('click', function() {
                    if (scrollPosition > 0) {
                        scrollPosition = scrollPosition - cardWidth;
                        $(currentCarouselId + ' .carousel-inner').animate({ scrollLeft: scrollPosition }, 600);
                    }
                });
            });
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
